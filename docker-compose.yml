version: '3.4'
services:
  app1: &app
    build: .
    hostname: app1
    environment:
      DATABASE_URL: 'postgres://postgres:12345678@postgres:5432/postgres?connection_limit=240'
      PORT: '9999'
      CLUSTER: false
      CLUSTER_WORKERS: 2
    # expose:
    #   - '8080'
    ports:
      - 9999:9999
    depends_on:
      postgres:
        condition: service_healthy
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.575'
          memory: '0.7GB'
  # app2:
  #   <<: *app
  #   hostname: app2

  postgres:
    image: postgres
    command: postgres -c 'max_connections=450' -c 'log_error_verbosity=terse' -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - 5432:5432
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d postgres -U postgres']
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 2s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '1.3GB'

  # nginx: # Load Balancer
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - app1
  #     - app2
  #   ports:
  #     - '9999:9999'
  #   ulimits:
  #     nproc: 1000000
  #     nofile:
  #       soft: 1000000
  #       hard: 1000000
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.05'
  #         memory: '0.3GB'
  pghero:
    container_name: pghero
    image: ankane/pghero
    ports:
      - 80:8080
    environment:
      - DATABASE_URL=postgres://postgres:12345678@postgres:5432/postgres
